*hermitcrab.jax* シェル関係の設定を一括変更します。或いは好みのシェルでコマンドを実行します。

hermitcrab.vim	
								by 天井冴太

==============================================================================
CONTENTS						*hermitcrab-introduction*

Introduction		|hermitcrab-introduction|
Usage			|hermitcrab-usage|
Interface		|hermitcrab-interface|
	Commands	|hermitcrab-commands|
	Functions	|hermitcrab-functions|
	Variables	|hermitcrab-variables|
Changelog		|hermitcrab-changelog|

==============================================================================
INTRODUCTION						*hermitcrab-contents*

*hermitcrab.vim* は、シェル関係の設定を一括変更する手段を提供します。また、好
みのシェルでコマンドを実行する手段を提供します。

最新版:
	https://github.com/AmaiSaeta/hermitcrab.vim

==============================================================================
USAGE							*hermitcrab-usage*

前もって|g:hermitcrab_shells|辞書変数に設定内容を記述しておきます。例えば次の例
は、zsh用の設定を"ZSH"という名で、bash用の設定を"BASH"という名で参照出来るよう
にしています。 >
	:let g:hermitcrab_shells = {
	\	'ZSH': {
	\		'shell': 'zsh',
	\		'shellcmdflag': '-c',
	\		'shellpipe': '2>&1 | tee',
	\		'shellslash': 1,
	\		'shellredir': '>&',
	\		'shelltemp': 0,
	\		'shellxquote': ''
	\	},
	\	'BASH': {
	\		'shell': 'bash',
	\		'shellcmdflag: '-c',
	\		'shellpipe': '2>&1| tee',
	\		'shellquote': '',
	\		'shellredir': '>%s 2>&1',
	\		'shellslash': 1,
	\		'shelltemp': 1,
	\		'shellxquote': '',
	\		'shellxescape': ''
	\	}
	\ }
<

|:HermitCrabSwitch|や|hermitcrab#switch()|を用いると、シェル関係の設定を
|g:hermitcrab_shells|に定義した内容に一括変更出来ます。 >
	" PowerShellに変更する例
	:HermitCrabSwitch PS

	:set shell?	" == 'powershell.exe'
<

|:HermitCrabRun|や|hermitcrab#run()|、|hermitcrab#call()|で、任意シェルでコマンドを実
行する事が出来ます。 >
	let engine = &shell

	" zshでlsコマンドを実行 (:!に相当)
	:HermitCrabRun ZSH ls

	echo engine == &shell	" == 1; コマンド/関数実行後は元の設定に戻ります

	" zshでlsコマンドを実行 (system()に相当)
	:let result = hermitcrab#call('ZSH', 'ls')
<

==============================================================================
INTERFACE						*hermitcrab-interface*

------------------------------------------------------------------------------
COMMANDS						*hermitcrab-commands*

:HermitCrabSwitch {name}				*:HermitCrabSwitch*
	シェル関係の設定を、|g:hermitcrab_shells|の内容に基づいて変更します。
	{name}は|g:hermitcrab_shells|のキーの何れかでなければなりません。
	|hermitcrab#switch()|のコマンド版です。

:HermitCrabRun {name} {command}				*:HermitCrabRun*
	|g:hermitcrab_shells|の{name}の設定で、シェルのコマンド{command}を実行し
	ます。
	{name}は|g:hermitcrab_shells|に設定したキーの何れかでなければなりません。
	|:!|に相当します。|hermitcrab#run()|のコマンド版です。

------------------------------------------------------------------------------
FUNCTIONS						*hermitcrab-functions*

hermitcrab#switch({name})				*hermitcrab#switch()*
	シェル関係の設定を、|g:hermitcrab_shells|の内容に基づいて変更します。
	{name}は|g:hermitcrab_shells|に設定したキーの何れかでなければなりません。
	|:HermitCrabSwitch|の関数版です。

hermitcrab#switch({options})
	シェル関係の設定を、引数{options}の内容に基づいて変更します。
	{options}は|g:hermitcrab_shells|の値として設定する辞書と同じフォーマット
	です。

hermitcrab#run({name}, {command})			*hermitcrab#run()*
	|g:hermitcrab_shells|の{name}に相当する設定で、シェルのコマンド{command}
	を実行します。
	{name}は|g:hermitcrab_shells|に設定したキーの何れかでなければなりません。
	|:HermitCrabRun|の関数版です。

hermitcrab#run({options}, {command})
	引数{options}に相当する設定で、シェルのコマンド{command}を実行します。
	{options}は|g:hermitcrab_shells|の値として設定する辞書と同じフォーマット
	です。

hermitcrab#call({name}, {command} [, {input}])		*hermitcrab#call()*
	|g:hermitcrab_shells|の{name}に相当する設定で、シェルのコマンド{command}
	を実行し、その結果を返します。
	{name}は|g:hermitcrab_shells|に設定したキーの何れかでなければなりませ
	ん。
	{input}が与えられた場合、その文字列を標準入力として扱います。
	|system()|に相当します。

hermitcrab#call({options}, {command} [, {input}])
	引数{options}に相当する設定で、シェルのコマンド{command}を実行し、その
	結果を返します。
	{options}は|g:hermitcrab_shells|の値として設定する辞書と同じフォーマッ
	トです。
	{input}が与えられた場合、その文字列を標準入力として扱います。
	|system()|に相当します。

hermitcrab#confirmShell()			 *hermitcrab#confirmShell()*
	現在のシェル関係の設定の内容を保持した辞書を返します。
	返される辞書の形式は|g:hermitcrab_shells|の値部分と同じ。即ち、名称をキー
	とし、その設定値を値とする辞書です。

------------------------------------------------------------------------------
VARIABLES						*hermitcrab-variables*

g:hermitcrab_shells					*g:hermitcrab_shells*
	当プラグインで切り替えるシェル関係設定に名前を付けます。
	辞書変数です。キーはそのシェル関係設定群に付ける名前です。また、値は実
	際の設定内容になり、それは設定の名称をキーに、設定値を値とする辞書です。
	'shelltemp'のように、有無効を切り替える設定は、有効化するならば1、無効
	ならば0を指定します。ここで省略された物は、Vimのデフォルト値が用いられ
	ます。
	必ず、Vim起動時の値を保持する、そのシェル名('shell'からディレクトリパス
	を除いた物)をキーとする値が追加されます。
	以下は、zshとbash用の値を設定する例です。 >
		:let g:hermitcrab_shells = {
		\	'ZSH': {
		\		'shell': 'zsh',
		\		'shellcmdflag': '-c',
		\		'shellpipe': '2>&1| tee',
		\		'shellquote': '',
		\		'shellredir': '>%s 2>&1',
		\		'shellslash': 1,
		\		'shelltemp': 1,
		\		'shellxquote': '',
		\		'shellxescape': ''
		\	},
		\	'BASH': {
		\		'shell': 'bash',
		\		'shellcmdflag: '-c',
		\		'shellpipe': '2>&1| tee',
		\		'shellquote': '',
		\		'shellredir': '>%s 2>&1',
		\		'shellslash': 1,
		\		'shelltemp': 1,
		\		'shellxquote': '',
		\		'shellxescape': ''
		\	}
		\ }
<

==============================================================================
CHANGELOG						*hermitcrab-changelog*

1.02.20140326
	- コマンドの補完関数を修正
	- テストコードに、セキュリティソフトの影響でテストに失敗する可能性につ
	  いて注記
1.01.20140204
	- オプション設定処理の変更
	  - 無限ループする可能性の除去
	  - 処理の効率化
	- エスケープのし忘れを修正 [テストコード]
1.00.20130703
	- 初版

==============================================================================
 vim:tw=78:ts=8:ft=help:norl:
